//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "IdBaseComponent"
#pragma link "IdComponent"
#pragma link "IdUDPBase"
#pragma link "IdUDPServer"
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm2::FormCreate(TObject *Sender)
{
//	mServerHost = "192.168.1.103";
//	mServerPort = 2011;
	mLogCount = 0;
	mOnline = false;

	IdUDPServer1->Bindings->Add();
	IdUDPServer1->Bindings->Items[0]->Port = 2013;
	IdUDPServer1->Active = true;

}
//---------------------------------------------------------------------------

void TForm2::LogMsg(String AMsg)
{
	mLogCount++;
	Memo1->Lines->Add("#"+IntToStr(mLogCount) + "@" + Now().TimeString() + "-->" + AMsg);
}
//---------------------------------------------------------------------------

void TForm2::SendUDPData(Sysutils::TBytes ABuffer, TIdSocketHandle *ABinding)
{
	IdUDPServer1->SendBuffer(ABinding->PeerIP, ABinding->PeerPort, ABuffer);

	LogMsg("---****SEND***////////////////*begin*************************************---");

	LogMsg("send message to app, size = " + IntToStr(ABuffer.Length));
	String s = "";
	for (int i = 0; i < ABuffer.Length; i++) {
		s += IntToHex(ABuffer[i], 2);
		s += "-";
	}
	LogMsg("sned message data:" + s);

	LogMsg("---****SEND***////////////////*end*************************************---");

//	IdUDPServer1->SendBuffer(mServerHost, mServerPort, ABuffer);
}
//---------------------------------------------------------------------------

void __fastcall TForm2::IdUDPServer1UDPRead(TIdUDPListenerThread *AThread, TBytes AData,
		  TIdSocketHandle *ABinding)
{
	LogMsg("---***RECEIVE************************begin*************************************---");

	LogMsg("receive message from app, size = " + IntToStr(AData.Length));
	String s = "";
	for (int i = 0; i < AData.Length; i++) {
		s += IntToHex(AData[i], 2);
		s += "-";
	}
	LogMsg("message data:" + s);

	ProcessReceiveData(AData, ABinding);

	LogMsg("peei ip = " + ABinding->PeerIP);
	LogMsg("peei port = " + IntToStr(ABinding->PeerPort));

	LogMsg("---*****RECEIVE*********************end**************************************---");
}
//---------------------------------------------------------------------------

void TForm2::ProcessReceiveData(TBytes AData, TIdSocketHandle *ABinding)
{

//	if (0x0A == AData[9]) {
//		if (0x02 == AData[8]) { // 收到探测应答
//			Memo1->Lines->Add("收到探测应答，fa song zhu ce bao");
//		}
//	}

	LogMsg("receive from port " + IntToStr(ABinding->PeerPort));
	if (PACKET_DETECT == AData[9]) {
		if (0x01 == AData[8]) { // 收到终端探测包
			LogMsg("收到终端探测包。发起应答。");
			DoDetectMsg(AData, ABinding);
		}
	}

	if (PACKET_ONLINE == AData[9]) {
		if (0x01 == AData[8]) { // 收到终端探测包
			LogMsg("收到终端注册包。发起应答。");
			DoOnlineMsg(AData, ABinding);
		}
	}
}
//---------------------------------------------------------------------------

void TForm2::DoDetectMsg(TBytes AData, TIdSocketHandle *ABinding)
{
//	Timer1->Enabled = false;
	// 55 AA 11 00 00 00 00 00 01 0A 00 D5 94 27 BD B1 03
	Sysutils::TBytes ABuffer; // = new TBytes;
	ABuffer.set_length(100);

	int k = 0;
	// 2个标志
	ABuffer[k++] = PACKET_HEAD1;
	ABuffer[k++] = PACKET_HEAD2;
	// 2字节包长
	ABuffer[k++] = 0x12;
	ABuffer[k++] = 0x00;
	// 4字节包序号
	ABuffer[k++] = 0x00; // mPacketIndex;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	// 1字节包状态   0不需要确认， 1需要确认， 2确认应答
	ABuffer[k++] = 0x02;
	// 1字节包类型
	ABuffer[k++] = PACKET_DETECT; // 设备 嗅探包
	ABuffer[k++] = 0x00;
	// 4字节机器编号
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0xD5;
	ABuffer[k++] = 0x94;
	ABuffer[k++] = 0x27;
	// N字节数据

	// 2字节，校验码
	ABuffer[k++] = 0xBD;
	ABuffer[k++] = 0xB1;
	// 1字节，包尾
	ABuffer[k++] = PACKET_TAIL;

	ABuffer.set_length(k);

	SendUDPData(ABuffer,ABinding);
}
//---------------------------------------------------------------------------

void TForm2::DoOnlineMsg(TBytes AData, TIdSocketHandle *ABinding)
{
	// 55 AA 11 00 00 00 00 00 01 0A 00 D5 94 27 BD B1 03
	Sysutils::TBytes ABuffer; // = new TBytes;
	ABuffer.set_length(100);

	int k = 0;
	// 2个标志
	ABuffer[k++] = PACKET_HEAD1;
	ABuffer[k++] = PACKET_HEAD2;
	// 2字节包长
	ABuffer[k++] = 0x12;
	ABuffer[k++] = 0x00;
	// 4字节包序号
	ABuffer[k++] = 0x00; // mPacketIndex;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	// 1字节包状态   0不需要确认， 1需要确认， 2确认应答
	ABuffer[k++] = 0x02;
	// 1字节包类型
	ABuffer[k++] = PACKET_ONLINE; // 设备 online
	ABuffer[k++] = 0x00;
	// 4字节机器编号
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0xD5;
	ABuffer[k++] = 0x94;
	ABuffer[k++] = 0x27;
	// N字节数据

	// 2字节，校验码
	ABuffer[k++] = 0xBD;
	ABuffer[k++] = 0xB1;
	// 1字节，包尾
	ABuffer[k++] = PACKET_TAIL;

	ABuffer.set_length(k);

	SendUDPData(ABuffer,ABinding);
	StartSendFetalData(ABinding);

}
//---------------------------------------------------------------------------

void TForm2::StartSendFetalData(TIdSocketHandle *ABinding)
{	//begin send fetal data
	mUDPBinding = ABinding;
	mPacketIndex = 0;
//	Timer1->Enabled = true;
}
//---------------------------------------------------------------------------

void __fastcall TForm2::Timer1Timer(TObject *Sender)
{       //send fetal data
	Sysutils::TBytes ABuffer; // = new TBytes;
	ABuffer.set_length(100);
//55 AA
//1D 00
//98 00 00 00
//00
//2E
//00 D5 94 27
//BD 00 00 00 00 00 00 00 A0 78 80 00 00 F5 03
	int k = 0;
	// 2个标志
	ABuffer[k++] = PACKET_HEAD1;
	ABuffer[k++] = PACKET_HEAD2;
	// 2字节包长
	ABuffer[k++] = 0x1E;
	ABuffer[k++] = 0x00;
	// 4字节包序号
	ABuffer[k++] = mPacketIndex;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	// 1字节包状态   0不需要确认， 1需要确认， 2确认应答
	ABuffer[k++] = 0x00;
	// 2字节包类型
	ABuffer[k++] = PACKET_FETAL_DATA; //  10
	ABuffer[k++] = 0x00; //  10
	// 4字节机器编号
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0xD5;
	ABuffer[k++] = 0x94;
	ABuffer[k++] = 0x27;     //14
	// N字节数据
	ABuffer[k++] = 0xBD - mPacketIndex%30;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00 + mPacketIndex%50;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0xA0;
	ABuffer[k++] = 0x78;
	ABuffer[k++] = 0x80;
	ABuffer[k++] = 0x00;

	// 2字节，校验码
	ABuffer[k++] = 0x00;
	ABuffer[k++] = 0xF5;
	// 1字节，包尾
	ABuffer[k++] = PACKET_TAIL;

	ABuffer.set_length(k);

	Memo1->Lines->Add("send fetal data index = " + IntToStr(mPacketIndex));
	if (mPacketIndex++ > 100) {
		mPacketIndex = 1;
	}

//	IdUDPServer1->SendBuffer(mServerIP, mServerPort, ABuffer);
	SendUDPData(ABuffer,mUDPBinding);
}
//---------------------------------------------------------------------------

void __fastcall TForm2::Button1Click(TObject *Sender)
{
	String p = ExtractFileDir(Application->ExeName);
	String  f ="\\Log" + Now().TimeString() + ".txt";
	f =	StringReplace(f, ":", "-", TReplaceFlags() << rfReplaceAll);
	Memo1->Lines->SaveToFile(p+f);
}
//---------------------------------------------------------------------------

